!function(e,o){var n,i,t=e.html5||{},a=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,c=/^<|^(?:a|b|button|code|div|fieldset|form|h1|h2|h3|h4|h5|h6|i|iframe|img|input|label|li|link|ol|option|p|param|q|script|select|span|strong|style|table|tbody|td|textarea|tfoot|th|thead|tr|ul)$/i,r="_html5shiv",l=0,m={};function s(){var e=f.elements;return"string"==typeof e?e.split(" "):e}function u(e){var t=m[e[r]];return t||(t={},l++,e[r]=l,m[l]=t),t}function h(e,t,n){return t||(t=o),i?t.createElement(e):(n||(n=u(t)),(r=n.cache[e]?n.cache[e].cloneNode():c.test(e)?(n.cache[e]=n.createElem(e)).cloneNode():n.createElem(e)).canHaveChildren&&!a.test(e)?n.frag.appendChild(r):r);var r}function d(e){e||(e=o);var t=u(e);return!f.shivCSS||n||t.hasCSS||(t.hasCSS=!!function(e,t){var n=e.createElement("p"),r=e.getElementsByTagName("head")[0]||e.documentElement;return n.innerHTML="x<style>"+t+"</style>",r.insertBefore(n.lastChild,r.firstChild)}(e,"article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}")),i||function(t,n){n.cache||(n.cache={},n.createElem=t.createElement,n.createFrag=t.createDocumentFragment,n.frag=n.createFrag()),t.createElement=function(e){return f.shivMethods?h(e,t,n):n.createElem(e)},t.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+s().join().replace(/\w+/g,function(e){return n.createElem(e),n.frag.createElement(e),'c("'+e+'")'})+");return n}")(f,n.frag)}(e,t),e}!function(){try{var e=o.createElement("a");e.innerHTML="<xyz></xyz>",n="hidden"in e,i=1==e.childNodes.length||function(){o.createElement("a");var e=o.createDocumentFragment();return void 0===e.cloneNode||void 0===e.createDocumentFragment||void 0===e.createElement}()}catch(e){i=n=!0}}();var f={elements:t.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:!1!==t.shivCSS,supportsUnknownElements:i,shivMethods:!1!==t.shivMethods,type:"default",shivDocument:d,createElement:h,createDocumentFragment:function(e,t){if(e||(e=o),i)return e.createDocumentFragment();for(var n=(t=t||u(e)).frag.cloneNode(),r=0,a=s(),c=a.length;r<c;r++)n.createElement(a[r]);return n}};e.html5=f,d(o)}(this,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
