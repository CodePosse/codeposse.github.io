window.matchMedia=window.matchMedia||function(e,t){var n,a=e.documentElement,i=a.firstElementChild||a.firstChild,s=e.createElement("body"),r=e.createElement("div");return r.id="mq-test-1",r.style.cssText="position:absolute;top:-100em",s.style.background="none",s.appendChild(r),function(e){return r.innerHTML='&shy;<style media="'+e+'"> #mq-test-1 { width: 42px; }</style>',a.insertBefore(s,i),n=42==r.offsetWidth,a.removeChild(s),{matches:n,media:e}}}(document),function(o){if(o.respond={},respond.update=function(){},respond.mediaQueriesSupported=o.matchMedia&&o.matchMedia("only all").matches,!respond.mediaQueriesSupported){var f,g,y,x=o.document,v=x.documentElement,E=[],w=[],T=[],d={},C=x.getElementsByTagName("head")[0]||v,l=x.getElementsByTagName("base")[0],S=C.getElementsByTagName("link"),m=[],e=function(){for(var e,t,n,a,i=S,s=i.length,r=0;r<s;r++)t=(e=i[r]).href,n=e.media,a=e.rel&&"stylesheet"===e.rel.toLowerCase(),t&&a&&!d[t]&&(e.styleSheet&&e.styleSheet.rawCssText?(c(e.styleSheet.rawCssText,t,n),d[t]=!0):(/^([a-zA-Z:]*\/\/)/.test(t)||l)&&t.replace(RegExp.$1,"").split("/")[0]!==o.location.host||m.push({href:t,media:n}));h()},h=function(){if(m.length){var t=m.shift();n(t.href,function(e){c(e,t.href,t.media),d[t.href]=!0,h()})}},c=function(e,t,n){var a,i,s,r,o,d=e.match(/@media[^\{]+\{([^\{\}]*\{[^\}\{]*\})+/gi),l=d&&d.length||0,m=function(e){return e.replace(/(url\()['"]?([^\/\)'"][^:\)'"]+)['"]?(\))/g,"$1"+t+"$2$3")},h=!l&&n,c=0;for((t=t.substring(0,t.lastIndexOf("/"))).length&&(t+="/"),h&&(l=1);c<l;c++)for(a=0,h?(i=n,w.push(m(e))):(i=d[c].match(/@media *([^\{]+)\{([\S\s]+?)$/)&&RegExp.$1,w.push(RegExp.$2&&m(RegExp.$2))),o=(r=i.split(",")).length;a<o;a++)s=r[a],E.push({media:s.split("(")[0].match(/(only\s+)?([a-zA-Z]+)\s?/)&&RegExp.$2||"all",rules:w.length-1,hasquery:-1<s.indexOf("("),minw:s.match(/\(min\-width:[\s]*([\s]*[0-9\.]+)(px|em)[\s]*\)/)&&parseFloat(RegExp.$1)+(RegExp.$2||""),maxw:s.match(/\(max\-width:[\s]*([\s]*[0-9\.]+)(px|em)[\s]*\)/)&&parseFloat(RegExp.$1)+(RegExp.$2||"")});b()},$=function(){var e,t=x.createElement("div"),n=x.body,a=!1;return t.style.cssText="position:absolute;font-size:1em;width:1em",n||((n=a=x.createElement("body")).style.background="none"),n.appendChild(t),v.insertBefore(n,v.firstChild),e=t.offsetWidth,a?v.removeChild(n):n.removeChild(t),e=y=parseFloat(e)},b=function(e){var t="clientWidth",n=v[t],a="CSS1Compat"===x.compatMode&&n||x.body[t]||n,i={},s=S[S.length-1],r=(new Date).getTime();if(e&&f&&r-f<30)return clearTimeout(g),void(g=setTimeout(b,30));for(var o in f=r,E){var d=E[o],l=d.minw,m=d.maxw,h=null===l,c=null===m;l&&(l=parseFloat(l)*(-1<l.indexOf("em")?y||$():1)),m&&(m=parseFloat(m)*(-1<m.indexOf("em")?y||$():1)),d.hasquery&&(h&&c||!(h||l<=a)||!(c||a<=m))||(i[d.media]||(i[d.media]=[]),i[d.media].push(w[d.rules]))}for(var o in T)T[o]&&T[o].parentNode===C&&C.removeChild(T[o]);for(var o in i){var u=x.createElement("style"),p=i[o].join("\n");u.type="text/css",u.media=o,C.insertBefore(u,s.nextSibling),u.styleSheet?u.styleSheet.cssText=p:u.appendChild(x.createTextNode(p)),T.push(u)}},n=function(e,t){var n=a();n&&(n.open("GET",e,!0),n.onreadystatechange=function(){4!=n.readyState||200!=n.status&&304!=n.status||t(n.responseText)},4!=n.readyState&&n.send(null))},a=function(){var t=!1;try{t=new XMLHttpRequest}catch(e){t=new ActiveXObject("Microsoft.XMLHTTP")}return function(){return t}}();e(),respond.update=e,o.addEventListener?o.addEventListener("resize",t,!1):o.attachEvent&&o.attachEvent("onresize",t)}function t(){b(!0)}}(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
