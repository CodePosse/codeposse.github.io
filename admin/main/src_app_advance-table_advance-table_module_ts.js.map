{"version":3,"file":"src_app_advance-table_advance-table_module_ts.js","mappings":"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","sources":["./src/app/advance-table/advance-table-routing.module.ts","./src/app/advance-table/advance-table.component.ts","./src/app/advance-table/advance-table.component.html","./src/app/advance-table/advance-table.model.ts","./src/app/advance-table/advance-table.module.ts","./src/app/advance-table/advance-table.service.ts","./src/app/advance-table/delete/delete.component.ts","./src/app/advance-table/delete/delete.component.html","./src/app/advance-table/form/form.component.ts","./src/app/advance-table/form/form.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdvanceTableComponent } from './advance-table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdvanceTableComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdvanceTableRoutingModule {}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { AdvanceTableService } from './advance-table.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { AdvanceTable } from './advance-table.model';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormComponent } from './form/form.component';\nimport { DeleteComponent } from './delete/delete.component';\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\n\n@Component({\n  selector: 'app-advance-table',\n  templateUrl: './advance-table.component.html',\n  styleUrls: ['./advance-table.component.sass'],\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\n})\nexport class AdvanceTableComponent implements OnInit {\n  displayedColumns = [\n    'select',\n    'img',\n    'fName',\n    'lName',\n    'email',\n    'gender',\n    'bDate',\n    'mobile',\n    'address',\n    'country',\n    'actions',\n  ];\n  exampleDatabase: AdvanceTableService | null;\n  dataSource: ExampleDataSource | null;\n  selection = new SelectionModel<AdvanceTable>(true, []);\n  id: number;\n  advanceTable: AdvanceTable | null;\n\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public advanceTableService: AdvanceTableService,\n    private snackBar: MatSnackBar\n  ) {}\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n  @ViewChild(MatMenuTrigger)\n  contextMenu: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n  ngOnInit() {\n    this.loadData();\n  }\n  refresh() {\n    this.loadData();\n  }\n  addNew() {\n    let tempDirection;\n    if (localStorage.getItem('isRtl') === 'true') {\n      tempDirection = 'rtl';\n    } else {\n      tempDirection = 'ltr';\n    }\n    const dialogRef = this.dialog.open(FormComponent, {\n      data: {\n        advanceTable: this.advanceTable,\n        action: 'add',\n      },\n      direction: tempDirection,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.unshift(\n          this.advanceTableService.getDialogData()\n        );\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-success',\n          'Add Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  editCall(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem('isRtl') === 'true') {\n      tempDirection = 'rtl';\n    } else {\n      tempDirection = 'ltr';\n    }\n    const dialogRef = this.dialog.open(FormComponent, {\n      data: {\n        advanceTable: row,\n        action: 'edit',\n      },\n      direction: tempDirection,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[foundIndex] =\n          this.advanceTableService.getDialogData();\n        // And lastly refresh table\n        this.refreshTable();\n        this.showNotification(\n          'black',\n          'Edit Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  deleteItem(row) {\n    this.id = row.id;\n    let tempDirection;\n    if (localStorage.getItem('isRtl') === 'true') {\n      tempDirection = 'rtl';\n    } else {\n      tempDirection = 'ltr';\n    }\n    const dialogRef = this.dialog.open(DeleteComponent, {\n      data: row,\n      direction: tempDirection,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\n          (x) => x.id === this.id\n        );\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n        this.showNotification(\n          'snackbar-danger',\n          'Delete Record Successfully...!!!',\n          'bottom',\n          'center'\n        );\n      }\n    });\n  }\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.renderedData.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.dataSource.renderedData.forEach((row) =>\n          this.selection.select(row)\n        );\n  }\n  removeSelectedRows() {\n    const totalSelect = this.selection.selected.length;\n    this.selection.selected.forEach((item) => {\n      const index: number = this.dataSource.renderedData.findIndex(\n        (d) => d === item\n      );\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\n      this.exampleDatabase.dataChange.value.splice(index, 1);\n      this.refreshTable();\n      this.selection = new SelectionModel<AdvanceTable>(true, []);\n    });\n    this.showNotification(\n      'snackbar-danger',\n      totalSelect + ' Record Delete Successfully...!!!',\n      'bottom',\n      'center'\n    );\n  }\n  public loadData() {\n    this.exampleDatabase = new AdvanceTableService(this.httpClient);\n    this.dataSource = new ExampleDataSource(\n      this.exampleDatabase,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n      if (!this.dataSource) {\n        return;\n      }\n      this.dataSource.filter = this.filter.nativeElement.value;\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this.snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName,\n    });\n  }\n\n  // context menu\n  onContextMenu(event: MouseEvent, item: AdvanceTable) {\n    event.preventDefault();\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n    this.contextMenu.menuData = { item: item };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n}\nexport class ExampleDataSource extends DataSource<AdvanceTable> {\n  _filterChange = new BehaviorSubject('');\n  get filter(): string {\n    return this._filterChange.value;\n  }\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n  filteredData: AdvanceTable[] = [];\n  renderedData: AdvanceTable[] = [];\n  constructor(\n    public _exampleDatabase: AdvanceTableService,\n    public _paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<AdvanceTable[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page,\n    ];\n    this._exampleDatabase.getAllAdvanceTables();\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this._exampleDatabase.data\n          .slice()\n          .filter((advanceTable: AdvanceTable) => {\n            const searchStr = (\n              advanceTable.fName +\n              advanceTable.lName +\n              advanceTable.email +\n              advanceTable.mobile +\n              advanceTable.gender +\n              advanceTable.bDate +\n              advanceTable.address +\n              advanceTable.country\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this._paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n  sortData(data: AdvanceTable[]): AdvanceTable[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'fName':\n          [propertyA, propertyB] = [a.fName, b.fName];\n          break;\n        case 'lName':\n          [propertyA, propertyB] = [a.lName, b.lName];\n          break;\n        case 'email':\n          [propertyA, propertyB] = [a.email, b.email];\n          break;\n        case 'address':\n          [propertyA, propertyB] = [a.address, b.address];\n          break;\n        case 'mobile':\n          [propertyA, propertyB] = [a.mobile, b.mobile];\n          break;\n      }\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"block-header\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n          <ul class=\"breadcrumb breadcrumb-style \">\n            <li class=\"breadcrumb-item\">\n              <h4 class=\"page-title\">Table</h4>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-1\">\n              <a routerLink=\"/dashboard/main\">\n                <i class=\"fas fa-home\"></i> Home</a>\n            </li>\n            <li class=\"breadcrumb-item bcrumb-2\">\n              <a href=\"#\" onClick=\"return false;\">Table</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"alert alert-primary\">\n      Advance table component is develop using <strong>Angular Material Table</strong>. Main\n      features are:<br><br>\n      <ul class=\"fa-ul\">\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Searching\n          Records In Table\n        </li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Sorting Records\n          In Table\n        </li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Add, Update,\n          Delete In Table Record\n        </li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Row Click Edit\n          Table Record\n        </li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Context Menu,\n          And Nested Context Menu\n        </li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Crud Operations\n          Using Context Menu </li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Multi select row\n          using checkbox </li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Multiple delete\n          rows using checkbox </li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Refresh Table\n          Data</li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Pagination\n          Supported</li>\n        <li class=\"font-15\"><span class=\"fa-li\"><i class=\"fas fa-angle-double-right\"></i></span>Row Per Page\n          Options</li>\n      </ul>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"body\">\n            <div class=\"responsive_table\">\n              <div class=\"materialTableHeader\">\n                <div class=\"row\">\n                  <div class=\"col-8\">\n                    <ul class=\"header-buttons-left ml-0\">\n                      <li class=\"dropdown\">\n                        <h2>\n                          <strong>Table Header</strong></h2>\n                      </li>\n                      <li class=\"dropdown m-l-20\">\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\n                          aria-label=\"Search box\">\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\n                            <mat-icon class=\"col-white\">delete</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                  <div class=\"col-4\">\n                    <ul class=\"header-buttons\">\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\n                            <mat-icon class=\"col-white\">add</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                      <li>\n                        <div class=\"icon-button-demo\">\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\n                          </button>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n                <!-- Checkbox Column -->\n                <ng-container matColumnDef=\"select\">\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                    </mat-checkbox>\n                  </mat-cell>\n                </ng-container>\n                <!-- ID Column -->\n                <ng-container matColumnDef=\"id\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"img\">\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\"> Image\n                  </mat-header-cell>\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\"> <img\n                      [src]=\"row.img\" />\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"fName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-8'\">First Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                    [ngClass]=\"'tbl-col-width-per-8'\">\n                    {{row.fName}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"lName\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-8'\">Last Name\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                    [ngClass]=\"'tbl-col-width-per-8'\">\n                    {{row.lName}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"email\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.email}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"gender\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-7'\">Gender\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                    [ngClass]=\"'tbl-col-width-per-7'\">\n                    {{row.gender}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"bDate\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Birth Date</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.bDate | date: 'MM/dd/yyyy' }}\n                  </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"mobile\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.mobile}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"address\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-20'\">Address\n                  </mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\n                    [ngClass]=\"'tbl-col-width-per-20'\">\n                    {{row.address}}</mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"country\">\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Country</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\n                    {{row.country}}</mat-cell>\n                </ng-container>\n                <!-- actions -->\n                <ng-container matColumnDef=\"actions\">\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"editCall(row)\">\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\n                      (click)=\"deleteItem(row)\">\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                    </button>\n                  </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\n                  [style.cursor]=\"'pointer'\" matRipple>\n                </mat-row>\n              </mat-table>\n\n              <!-- context menu start -->\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\n              </div>\n              <mat-menu #contextMenu=\"matMenu\">\n                <ng-template matMenuContent let-item=\"item\">\n                  <button mat-menu-item (click)=\"addNew()\">\n                    <mat-icon>add_box</mat-icon>\n                    <span>Add Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"editCall(item)\">\n                    <mat-icon>create</mat-icon>\n                    <span>Edit Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\n                    <mat-icon>delete</mat-icon>\n                    <span>Delete Record</span>\n                  </button>\n                  <button mat-menu-item (click)=\"refresh()\">\n                    <mat-icon>refresh</mat-icon>\n                    <span>Refresh Record</span>\n                  </button>\n                  <button mat-menu-item disabled>\n                    <mat-icon>no_encryption</mat-icon>\n                    <span>Disable</span>\n                  </button>\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\n                    <mat-icon>list_alt</mat-icon>\n                    <span> Nested Menu</span>\n                  </button>\n                </ng-template>\n              </mat-menu>\n              <mat-menu #nestedmenu=\"matMenu\">\n                <button mat-menu-item>\n                  <mat-icon>mail_outline</mat-icon>\n                  <span>Item 1</span>\n                </button>\n                <button mat-menu-item>\n                  <mat-icon>call</mat-icon>\n                  <span>Item 2</span>\n                </button>\n                <button mat-menu-item>\n                  <mat-icon>chat</mat-icon>\n                  <span>Item 3</span>\n                </button>\n              </mat-menu>\n              <!-- context menu end -->\n\n              <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n                No results\n              </div>\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\n              </mat-paginator>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { formatDate } from '@angular/common';\nexport class AdvanceTable {\n  id: number;\n  img: string;\n  fName: string;\n  lName: string;\n  email: string;\n  gender: string;\n  bDate: string;\n  mobile: string;\n  address: string;\n  country: string;\n  constructor(advanceTable) {\n    {\n      this.id = advanceTable.id || this.getRandomID();\n      this.img = advanceTable.avatar || 'assets/images/user/user1.jpg';\n      this.fName = advanceTable.fName || '';\n      this.lName = advanceTable.lName || '';\n      this.email = advanceTable.email || '';\n      this.gender = advanceTable.gender || 'male';\n      this.bDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\n      this.mobile = advanceTable.mobile || '';\n      this.address = advanceTable.address || '';\n      this.country = advanceTable.country || '';\n    }\n  }\n  public getRandomID(): string {\n    const S4 = () => {\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return S4() + S4();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdvanceTableRoutingModule } from './advance-table-routing.module';\nimport { AdvanceTableComponent } from './advance-table.component';\nimport { FormComponent as advanceTableForm } from './form/form.component';\nimport { DeleteComponent } from './delete/delete.component';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@NgModule({\n  declarations: [AdvanceTableComponent, advanceTableForm, DeleteComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdvanceTableRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatMenuModule,\n  ],\n})\nexport class AdvanceTableModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AdvanceTable } from './advance-table.model';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdvanceTableService {\n  private readonly API_URL = 'assets/data/advanceTable.json';\n  dataChange: BehaviorSubject<AdvanceTable[]> = new BehaviorSubject<\n    AdvanceTable[]\n  >([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n  constructor(private httpClient: HttpClient) {}\n  get data(): AdvanceTable[] {\n    return this.dataChange.value;\n  }\n  getDialogData() {\n    return this.dialogData;\n  }\n  /** CRUD METHODS */\n  getAllAdvanceTables(): void {\n    this.httpClient.get<AdvanceTable[]>(this.API_URL).subscribe(\n      (data) => {\n        this.dataChange.next(data);\n      },\n      (error: HttpErrorResponse) => {\n        console.log(error.name + ' ' + error.message);\n      }\n    );\n  }\n  // DEMO ONLY, you can find working methods below\n  addAdvanceTable(advanceTable: AdvanceTable): void {\n    this.dialogData = advanceTable;\n  }\n  updateAdvanceTable(advanceTable: AdvanceTable): void {\n    this.dialogData = advanceTable;\n  }\n  deleteAdvanceTable(id: number): void {\n    console.log(id);\n  }\n}\n","import { AdvanceTableService } from './../advance-table.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.sass'],\n})\nexport class DeleteComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public tableService: AdvanceTableService\n  ) {}\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  confirmDelete(): void {\n    this.tableService.deleteAdvanceTable(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Are you sure?</h3>\n  <div mat-dialog-content>\n    <ul class=\"clearfix\">\n      <li>\n        <p><span class=\"fw-bold\"> Name: </span>{{data.fName}} {{data.lName}}</p>\n      </li>\n      <li>\n        <p><span class=\"fw-bold\"> Email: </span>{{ data.email }}</p>\n      </li>\n      <li>\n        <p>\n          <span class=\"fw-bold\">Mobile: </span>{{data.mobile}}\n        </p>\n      </li>\n    </ul>\n  </div>\n  <div mat-dialog-actions class=\"mb-1\">\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\n      Delete\n    </button>\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { AdvanceTableService } from '../advance-table.service';\nimport {\n  FormControl,\n  Validators,\n  FormGroup,\n  FormBuilder,\n} from '@angular/forms';\nimport { AdvanceTable } from '../advance-table.model';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { formatDate } from '@angular/common';\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.sass'],\n})\nexport class FormComponent {\n  action: string;\n  dialogTitle: string;\n  advanceTableForm: FormGroup;\n  advanceTable: AdvanceTable;\n  constructor(\n    public dialogRef: MatDialogRef<FormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public advanceTableService: AdvanceTableService,\n    private fb: FormBuilder\n  ) {\n    // Set the defaults\n    this.action = data.action;\n    if (this.action === 'edit') {\n      this.dialogTitle =\n        data.advanceTable.fName + ' ' + data.advanceTable.lName;\n      this.advanceTable = data.advanceTable;\n    } else {\n      this.dialogTitle = 'New Record';\n      this.advanceTable = new AdvanceTable({});\n    }\n    this.advanceTableForm = this.createContactForm();\n  }\n  formControl = new FormControl('', [\n    Validators.required,\n    // Validators.email,\n  ]);\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n  createContactForm(): FormGroup {\n    return this.fb.group({\n      id: [this.advanceTable.id],\n      img: [this.advanceTable.img],\n      fName: [this.advanceTable.fName, [Validators.required]],\n      lName: [this.advanceTable.lName, [Validators.required]],\n      email: [\n        this.advanceTable.email,\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      gender: [this.advanceTable.gender],\n      bDate: [\n        formatDate(this.advanceTable.bDate, 'yyyy-MM-dd', 'en'),\n        [Validators.required],\n      ],\n      address: [this.advanceTable.address],\n      mobile: [this.advanceTable.mobile, [Validators.required]],\n      country: [this.advanceTable.country],\n    });\n  }\n  submit() {\n    // emppty stuff\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public confirmAdd(): void {\n    this.advanceTableService.addAdvanceTable(\n      this.advanceTableForm.getRawValue()\n    );\n  }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <img [src]='advanceTable.img' alt=\"avatar\">\n                <div class=\"modal-about\">\n                    <div class=\"fw-bold p-t-5 p-l-10 font-17\">\n                        {{dialogTitle}}</div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\n      <mat-icon>close</mat-icon>\n    </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"register-form m-4\" [formGroup]=\"advanceTableForm\" (ngSubmit)=\"submit\">\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>First Name</mat-label>\n                        <input matInput formControlName=\"fName\">\n                        <mat-icon matSuffix>face</mat-icon>\n                        <mat-error *ngIf=\"advanceTableForm.get('fName').hasError('required')\">\n                            First Name is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Last Name</mat-label>\n                        <input matInput formControlName=\"lName\">\n                        <mat-icon matSuffix>face</mat-icon>\n                        <mat-error *ngIf=\"advanceTableForm.get('lName').hasError('required')\">\n                            Last Name is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"m-b-20\">\n                        <mat-label class=\"msr-3\">Gender:</mat-label>\n                        <mat-radio-group aria-label=\"Select gender\" formControlName=\"gender\" required>\n                            <mat-radio-button value=\"male\">Male</mat-radio-button>\n                            <mat-radio-button value=\"female\">Female</mat-radio-button>\n                            <mat-error *ngIf=\"advanceTableForm.get('gender').hasError('required')\">\n                                Select gender\n                            </mat-error>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Email</mat-label>\n                        <input matInput formControlName=\"email\" required>\n                        <mat-icon matSuffix>email</mat-icon>\n                        <mat-error *ngIf=\"advanceTableForm.get('email').hasError('required') || advanceTableForm.get('email').touched\">\n                            Please enter a valid email address\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Birth date</mat-label>\n                        <input matInput [matDatepicker]=\"picker\" formControlName=\"bDate\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker></mat-datepicker>\n                        <mat-error *ngIf=\"advanceTableForm.get('bDate').hasError('required')\">\n                            Please select date\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Mobile</mat-label>\n                        <input matInput formControlName=\"mobile\" type=\"number\">\n                        <mat-icon matSuffix>phone</mat-icon>\n                        <mat-error *ngIf=\"advanceTableForm.get('mobile').hasError('required')\">\n                            Mobile is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\n                        <mat-label>Country</mat-label>\n                        <mat-select formControlName=\"country\" required>\n                            <mat-option [value]=\"'USA'\">\n                                USA\n                            </mat-option>\n                            <mat-option [value]=\"'usa'\">\n                                USA\n                            </mat-option>\n                            <mat-option [value]=\"'france'\">\n                                France\n                            </mat-option>\n                            <mat-option [value]=\"'germany'\">\n                                Germany\n                            </mat-option>\n                            <mat-option [value]=\"'spain'\">\n                                Spain\n                            </mat-option>\n                            <mat-option [value]=\"'turkey'\">\n                                Turkey\n                            </mat-option>\n                            <mat-option [value]=\"'other'\">\n                                Other\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"advanceTableForm.get('country').hasError('required')\">\n                            Country Name is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Address</mat-label>\n                        <textarea matInput formControlName=\"address\"></textarea>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!advanceTableForm.valid\" [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}