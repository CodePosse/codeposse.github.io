{"version":3,"file":"src_app_authentication_authentication_module_ts.js","mappings":"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","sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/locked/locked.component.ts","./src/app/authentication/locked/locked.component.html","./src/app/authentication/page500/page500.component.ts","./src/app/authentication/page500/page500.component.html","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LockedComponent } from './locked/locked.component';\nimport { Page404Component } from './page404/page404.component';\nimport { Page500Component } from './page500/page500.component';\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'signin',\n    pathMatch: 'full'\n  },\n  {\n    path: 'signin',\n    component: SigninComponent\n  },\n  {\n    path: 'signup',\n    component: SignupComponent\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'locked',\n    component: LockedComponent\n  },\n  {\n    path: 'page404',\n    component: Page404Component\n  },\n  {\n    path: 'page500',\n    component: Page500Component\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { Page500Component } from './page500/page500.component';\nimport { Page404Component } from './page404/page404.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LockedComponent } from './locked/locked.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n@NgModule({\n  declarations: [\n    Page500Component,\n    Page404Component,\n    SigninComponent,\n    SignupComponent,\n    LockedComponent,\n    ForgotPasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationRoutingModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule\n  ]\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n  constructor(private formBuilder: FormBuilder, private router: Router) {}\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      this.router.navigate(['/dashboard/main']);\n    }\n  }\n}\n","<div class=\"limiter\">\n  <div class=\"container-login100\">\n    <div class=\"wrap-login100\">\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <span class=\"login100-form-title p-b-45\">\n          Reset Password\n        </span>\n        <span class=\"error-subheader2 p-t-20 p-b-15\">\n          Enter your registered email address.\n        </span>\n        <div class=\"form-group mb-5\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Username</mat-label>\n            <input matInput formControlName=\"username\" required>\n            <mat-icon matSuffix>face</mat-icon>\n            <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\n              Username is required\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"container-login100-form-btn\">\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\n            Reset My Password\n          </button>\n        </div>\n        <div class=\"w-full p-t-25 text-center\">\n          <div>\n            <a routerLink=\"/authentication/signin\" class=\"txt1\">\n              Login?\n            </a>\n          </div>\n        </div>\n      </form>\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-02.png');\">\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-locked',\n  templateUrl: './locked.component.html',\n  styleUrls: ['./locked.component.scss'],\n})\nexport class LockedComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n  hide = true;\n  constructor(private formBuilder: FormBuilder, private router: Router) {}\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      this.router.navigate(['/dashboard/main']);\n    }\n  }\n}\n","<div class=\"limiter\">\n    <div class=\"container-login100\">\n        <div class=\"wrap-login100\">\n            <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"login100-form-logo\">\n                    <div class=\"image\">\n                        <img src=\"assets/images/usrbig.jpg\" alt=\"User\">\n                    </div>\n                </div>\n                <span class=\"login100-form-title p-b-34 p-t-27\">\n          Tim Hunold\n        </span>\n                <div class=\"text-center\">\n                    <p class=\"txt1 p-b-20\">\n                        Locked\n                    </p>\n                </div>\n                <div class=\"form-group mb-3\">\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Password</mat-label>\n                        <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\n                        <mat-icon matSuffix (click)=\"hide = !hide\">\n                            {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                        <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\n                            Password is required\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"container-login100-form-btn p-t-30\">\n                    <button mat-flat-button color=\"primary\" class=\"login100-form-btn\">\n            Login\n          </button>\n                </div>\n                <div class=\"w-full p-t-15 p-b-15 text-center\">\n                    <div>\n                        <a href=\"#\" class=\"txt1\">\n              Need Help?\n            </a>\n                    </div>\n                </div>\n            </form>\n            <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-01.png');\">\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-page500',\n  templateUrl: './page500.component.html',\n  styleUrls: ['./page500.component.scss'],\n})\nexport class Page500Component implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n","<div class=\"limiter\">\n  <div class=\"container-login100\">\n    <div class=\"wrap-login100\">\n      <form class=\"login100-form\">\n        <span class=\"error-header p-b-45\">\n          500\n        </span>\n        <span class=\"error-subheader2 p-b-5\">\n          Oops, Something went wrong. Please try after some times.\n        </span>\n        <div class=\"container-login100-form-btn p-t-30\t\">\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\">\n            Go To Home Page\n          </button>\n        </div>\n        <div class=\"w-full p-t-15 p-b-15 text-center\">\n          <div>\n            <a href=\"#\" class=\"txt1\">\n              Need Help?\n            </a>\n          </div>\n        </div>\n      </form>\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-04.png');\">\n      </div>\n    </div>\n  </div>\n</div>\n","import { AuthService } from 'src/app/core/service/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss'],\n})\nexport class SigninComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  hide = true;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {}\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['admin', Validators.required],\n      password: ['admin', Validators.required],\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n    if (this.loginForm.invalid) {\n      this.error = 'Username and Password not valid !';\n      return;\n    } else {\n      this.authService\n        .login(this.f.username.value, this.f.password.value)\n        .subscribe(\n          (res) => {\n            if (res) {\n              const token = this.authService.currentUserValue.token;\n              if (token) {\n                this.router.navigate(['/dashboard/main']);\n              }\n            } else {\n              this.error = 'Invalid Login';\n            }\n          },\n          (error) => {\n            this.error = error;\n            this.submitted = false;\n          }\n        );\n    }\n  }\n}\n","<div class=\"limiter\">\n  <div class=\"container-login100\">\n    <div class=\"wrap-login100\">\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <span class=\"login100-form-title pb-5\">\n          Login\n        </span>\n        <div class=\"row\">\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Username</mat-label>\n              <input matInput formControlName=\"username\" />\n              <mat-icon matSuffix>face</mat-icon>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Password</mat-label>\n              <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\n              <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\n                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n              </a>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\n          <div class=\"form-check\">\n            <label class=\"form-check-label\">\n              <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\n              <span class=\"form-check-sign\">\n                <span class=\"check\"></span>\n              </span>\n            </label>\n          </div>\n          <div>\n            <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\n          </div>\n        </div>\n        <div class=\"container-login100-form-btn\">\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\n            Login\n          </button>\n        </div>\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n        <div class=\"text-center p-t-30 p-b-20\">\n          <span class=\"txt3\">\n            or <a routerLink=\"/authentication/signup\">\n              sign up\n            </a> using\n          </span>\n        </div>\n        <div class=\"login100-form-social flex-c-m\">\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\n            <i class=\"fab fa-facebook-f\"></i>\n          </a>\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\n            <i class=\"fab fa-twitter\"></i>\n          </a>\n        </div>\n      </form>\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-01.png');\">\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n  hide = true;\n  chide = true;\n  constructor(private formBuilder: FormBuilder, private router: Router) {}\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: [\n        '',\n        [Validators.required, Validators.email, Validators.minLength(5)],\n      ],\n      password: ['', Validators.required],\n      cpassword: ['', Validators.required],\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      this.router.navigate(['/dashboard/main']);\n    }\n  }\n}\n","<div class=\"limiter\">\n  <div class=\"container-login100\">\n    <div class=\"wrap-login100\">\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <span class=\"login100-form-title p-b-30\">\n          Register\n        </span>\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n          <mat-label>Username</mat-label>\n          <input matInput formControlName=\"username\" required>\n          <mat-icon matSuffix>face</mat-icon>\n          <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\n            Username is required\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n          <mat-label>Email</mat-label>\n          <input matInput formControlName=\"email\" required>\n          <mat-icon matSuffix>mail</mat-icon>\n          <mat-error *ngIf=\"loginForm.get('email').hasError('required') || loginForm.get('email').touched\">\n            Please enter a valid email address\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n          <mat-label>Password</mat-label>\n          <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\n          <mat-icon matSuffix (click)=\"hide = !hide\">\n            {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\n            Password is required\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n          <mat-label>Confirm Password</mat-label>\n          <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\n          <mat-icon matSuffix (click)=\"chide = !chide\">\n            {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          <mat-error *ngIf=\"loginForm.get('cpassword').hasError('required')\">\n            Confirm Password is required\n          </mat-error>\n        </mat-form-field>\n        <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\n          <div>\n            <span>Already Registered? <a routerLink=\"/authentication/signin\">\n                Login\n              </a></span>\n          </div>\n        </div>\n        <div class=\"container-login100-form-btn\">\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\n            Register\n          </button>\n        </div>\n        <div class=\"text-center p-t-30 p-b-20\">\n          <span class=\"txt2\">\n            or sign up using\n          </span>\n        </div>\n        <div class=\"login100-form-social flex-c-m\">\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\n            <i class=\"fab fa-facebook-f\"></i>\n          </a>\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\n            <i class=\"fab fa-twitter\"></i>\n          </a>\n        </div>\n      </form>\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-02.png');\">\n      </div>\n    </div>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}